<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Homepage on Scientific Programming</title>
    <link>https://scientific-programming.github.io/</link>
    <description>Recent content in Homepage on Scientific Programming</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-gb</language>
    <lastBuildDate>Thu, 25 Oct 2018 17:49:03 +0100</lastBuildDate>
    
	<atom:link href="https://scientific-programming.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Setting up the Software</title>
      <link>https://scientific-programming.github.io/containers/tutorial1/</link>
      <pubDate>Fri, 26 Oct 2018 09:41:56 +0100</pubDate>
      
      <guid>https://scientific-programming.github.io/containers/tutorial1/</guid>
      <description>For all of the following tutorials, we will use Docker as the container software of choice. How to install Docker varies quite a lot between different operating systems.
Please follow the instructions relevant to you:
Windows  Windows: https://docs.docker.com/docker-for-windows/install/  Note: If you are using Windows 10 Home Edition, please install Docker Toolbox instead.
MacOS  MacOS: https://docs.docker.com/docker-for-mac/  Linux:  Ubuntu CentOS Debian Fedora  You will probably need to restart your computer as part of the installation process.</description>
    </item>
    
    <item>
      <title>Getting Started with Docker</title>
      <link>https://scientific-programming.github.io/containers/tutorial2/</link>
      <pubDate>Fri, 26 Oct 2018 09:41:56 +0100</pubDate>
      
      <guid>https://scientific-programming.github.io/containers/tutorial2/</guid>
      <description>First Steps 1) Make an account on the website https://hub.docker.com
Make the username something sensible as we&amp;rsquo;ll have to use it soon!
1) If you haven&amp;rsquo;t already, try &amp;ldquo;docker run ubuntu:18.04&amp;rdquo;. This downloads an image containing Ubuntu 18.04. If it it is the first time you have done this, you should see some output:
What is happening here? Have a look here. Docker Hub is a centralised repository for storing container images, and many are provided for you as a basis for creating your own.</description>
    </item>
    
    <item>
      <title>Saving and Sharing Images</title>
      <link>https://scientific-programming.github.io/containers/tutorial3/</link>
      <pubDate>Fri, 26 Oct 2018 09:41:56 +0100</pubDate>
      
      <guid>https://scientific-programming.github.io/containers/tutorial3/</guid>
      <description>Saving the Container 1) We can save the docker container to a file with
docker save myimage &amp;gt; myimage.tar You can load it again with
docker load myimage.tar 2) However, it&amp;rsquo;s not normally necessary to save containers like this - much easier just to use Docker Hub. Free uploads of containers if public, one private container per account. Create an account on Dockerhub
Make a repository called &amp;lsquo;mycontainer&amp;rsquo; on your Dockerhub account.</description>
    </item>
    
    <item>
      <title>Getting Started</title>
      <link>https://scientific-programming.github.io/version-control/tutorial1/</link>
      <pubDate>Thu, 25 Oct 2018 17:49:03 +0100</pubDate>
      
      <guid>https://scientific-programming.github.io/version-control/tutorial1/</guid>
      <description>Getting Started with Version Control We&amp;rsquo;re going to use the software Git. It&amp;rsquo;s not really important to know how it works underneath. This comic is actually surprisingly accurate, although we&amp;rsquo;ll try to teach you how to avoid having to do any deleting&amp;hellip;
1) Open your terminal, or Git Bash if you&amp;rsquo;re using Windows.
2) Set your name and username with Git. This labels modifications to files you do and associates them with you!</description>
    </item>
    
    <item>
      <title>GitHub and Collaborating</title>
      <link>https://scientific-programming.github.io/version-control/tutorial2/</link>
      <pubDate>Thu, 25 Oct 2018 17:49:03 +0100</pubDate>
      
      <guid>https://scientific-programming.github.io/version-control/tutorial2/</guid>
      <description>Storing your repository somewhere safe You have a history of your changes locally, but that&amp;rsquo;s not much good if your hard drive fails. We&amp;rsquo;ll now show you how keep a history remotely.
Git is known as a &amp;lsquo;distributed version control&amp;rsquo; system. Generally, you host a repository somewhere online. There are lots of different providers for this.
Version Control Websites GitHub - free! Now owned by Microsoft. Lots of integrations with other services.</description>
    </item>
    
    <item>
      <title>Discarding Temporary Changes</title>
      <link>https://scientific-programming.github.io/version-control/tutorial3/</link>
      <pubDate>Thu, 25 Oct 2018 17:49:03 +0100</pubDate>
      
      <guid>https://scientific-programming.github.io/version-control/tutorial3/</guid>
      <description>Discarding channges 1) If you make some changes to the file workshop.txt, but then decide that they weren&amp;rsquo;t correct or were unnecessary, you can easily get back to the head of the branch with the following command:
git reset HEAD workshop.txt This permanently discards these changes!
Resetting the whole repository If you have multiple files that have been changed, and you want to reset all of them, you can use:</description>
    </item>
    
  </channel>
</rss>